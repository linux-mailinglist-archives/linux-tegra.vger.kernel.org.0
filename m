Return-Path: <linux-tegra-owner@vger.kernel.org>
X-Original-To: lists+linux-tegra@lfdr.de
Delivered-To: lists+linux-tegra@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id 3DB50444338
	for <lists+linux-tegra@lfdr.de>; Wed,  3 Nov 2021 15:16:27 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S231712AbhKCOTC (ORCPT <rfc822;lists+linux-tegra@lfdr.de>);
        Wed, 3 Nov 2021 10:19:02 -0400
Received: from smtp-out1.suse.de ([195.135.220.28]:55764 "EHLO
        smtp-out1.suse.de" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S231131AbhKCOTC (ORCPT
        <rfc822;linux-tegra@vger.kernel.org>); Wed, 3 Nov 2021 10:19:02 -0400
Received: from relay2.suse.de (relay2.suse.de [149.44.160.134])
        by smtp-out1.suse.de (Postfix) with ESMTP id C070F218ED;
        Wed,  3 Nov 2021 14:16:24 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=suse.de; s=susede2_rsa;
        t=1635948984; h=from:from:reply-to:date:date:message-id:message-id:to:to:cc:cc:
         mime-version:mime-version:content-type:content-type:
         in-reply-to:in-reply-to:references:references;
        bh=IyCOQbcy3kmJ3VHhwgirT3uI+66g9isWYZuWQVudD5U=;
        b=s6zdvMx6f15tKA0FclGGivM0XIvPj1DwF8r2EbGbsl6aIJgm/4GxnTmHK7nfNmCLyYcaY+
        Ez4/kY2SxZaC8lIx0dKyXw+P1+2ySFL/Bdx+i5+rsD2bRtDBQ5r2am1sNFI4IEQss+nX29
        ko4nCuqO7sY8kXs8lN2aXOZpxY0kXqw=
DKIM-Signature: v=1; a=ed25519-sha256; c=relaxed/relaxed; d=suse.de;
        s=susede2_ed25519; t=1635948984;
        h=from:from:reply-to:date:date:message-id:message-id:to:to:cc:cc:
         mime-version:mime-version:content-type:content-type:
         in-reply-to:in-reply-to:references:references;
        bh=IyCOQbcy3kmJ3VHhwgirT3uI+66g9isWYZuWQVudD5U=;
        b=WXN/danrABGacO1mjCDSSCRV3P4J6huxkSkgR4N5BAM0fpxTaZEVsotRP6ihIjqJn1WKfv
        aIliMgpB2D7XBsAQ==
Received: from alsa1.suse.de (alsa1.suse.de [10.160.4.42])
        by relay2.suse.de (Postfix) with ESMTP id AF6D62C150;
        Wed,  3 Nov 2021 14:16:24 +0000 (UTC)
Date:   Wed, 03 Nov 2021 15:16:24 +0100
Message-ID: <s5ha6ilmiiv.wl-tiwai@suse.de>
From:   Takashi Iwai <tiwai@suse.de>
To:     Sameer Pujar <spujar@nvidia.com>
Cc:     <broonie@kernel.org>, <lgirdwood@gmail.com>, <perex@perex.cz>,
        <tiwai@suse.com>, <thierry.reding@gmail.com>,
        <jonathanh@nvidia.com>, <alsa-devel@alsa-project.org>,
        <linux-tegra@vger.kernel.org>, <linux-kernel@vger.kernel.org>
Subject: Re: [PATCH v2 01/10] ASoC: tegra: Fix kcontrol put callback in ADMAIF
In-Reply-To: <1635947547-24391-2-git-send-email-spujar@nvidia.com>
References: <1635947547-24391-1-git-send-email-spujar@nvidia.com>
        <1635947547-24391-2-git-send-email-spujar@nvidia.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Precedence: bulk
List-ID: <linux-tegra.vger.kernel.org>
X-Mailing-List: linux-tegra@vger.kernel.org

On Wed, 03 Nov 2021 14:52:17 +0100,
Sameer Pujar wrote:
> 
> The kcontrol put callback is expected to return 1 when there is change
> in HW or when the update is acknowledged by driver. This would ensure
> that change notifications are sent to subscribed applications. Update
> the ADMAIF driver accordingly
> 
> Fixes: f74028e159bb ("ASoC: tegra: Add Tegra210 based ADMAIF driver")
> Suggested-by: Jaroslav Kysela <perex@perex.cz>
> Suggested-by: Mark Brown <broonie@kernel.org>
> Signed-off-by: Sameer Pujar <spujar@nvidia.com>
> ---
>  sound/soc/tegra/tegra210_admaif.c | 23 ++++++++++++++++++-----
>  1 file changed, 18 insertions(+), 5 deletions(-)
> 
> diff --git a/sound/soc/tegra/tegra210_admaif.c b/sound/soc/tegra/tegra210_admaif.c
> index bcccdf3..dc71075 100644
> --- a/sound/soc/tegra/tegra210_admaif.c
> +++ b/sound/soc/tegra/tegra210_admaif.c
> @@ -452,16 +452,29 @@ static int tegra_admaif_put_control(struct snd_kcontrol *kcontrol,
>  	struct tegra_admaif *admaif = snd_soc_component_get_drvdata(cmpnt);
>  	int value = ucontrol->value.integer.value[0];
>  
> -	if (strstr(kcontrol->id.name, "Playback Mono To Stereo"))
> +	if (strstr(kcontrol->id.name, "Playback Mono To Stereo")) {
> +		if (admaif->mono_to_stereo[ADMAIF_TX_PATH][ec->reg] == value)
> +			return 0;
> +
>  		admaif->mono_to_stereo[ADMAIF_TX_PATH][ec->reg] = value;
> -	else if (strstr(kcontrol->id.name, "Capture Mono To Stereo"))
> +	} else if (strstr(kcontrol->id.name, "Capture Mono To Stereo")) {
> +		if (admaif->mono_to_stereo[ADMAIF_RX_PATH][ec->reg] == value)
> +			return 0;
> +
>  		admaif->mono_to_stereo[ADMAIF_RX_PATH][ec->reg] = value;
> -	else if (strstr(kcontrol->id.name, "Playback Stereo To Mono"))
> +	} else if (strstr(kcontrol->id.name, "Playback Stereo To Mono")) {
> +		if (admaif->stereo_to_mono[ADMAIF_TX_PATH][ec->reg] == value)
> +			return 0;
> +
>  		admaif->stereo_to_mono[ADMAIF_TX_PATH][ec->reg] = value;
> -	else if (strstr(kcontrol->id.name, "Capture Stereo To Mono"))
> +	} else if (strstr(kcontrol->id.name, "Capture Stereo To Mono")) {
> +		if (admaif->stereo_to_mono[ADMAIF_RX_PATH][ec->reg] == value)
> +			return 0;
> +
>  		admaif->stereo_to_mono[ADMAIF_RX_PATH][ec->reg] = value;
> +	}
>  
> -	return 0;
> +	return 1;

Hrm, that looks too redundant.  The similar checks are seen in the get
part, so we may have a better helper function to reduce the string
checks, something like below.


BTW, independent from this patch set, I noticed that those get/put
callbacks handle the wrong type.  For enum ctls, you have to use 
ucontrol->value.enumerated.value instead of
ucontrol->value.integer.value.  The former is long while the latter is
int, hence they may have different sizes.

Such a bug could be caught if you test once with
CONFIG_SND_CTL_VALIDATION=y.  It's recommended to test with that
config once for a new driver code.

So, please submit the fix patch(es) for correcting the ctl value
types, too.


thanks,

Takashi

--- a/sound/soc/tegra/tegra210_admaif.c
+++ b/sound/soc/tegra/tegra210_admaif.c
@@ -424,44 +424,46 @@ static const struct snd_soc_dai_ops tegra_admaif_dai_ops = {
 	.trigger	= tegra_admaif_trigger,
 };
 
-static int tegra_admaif_get_control(struct snd_kcontrol *kcontrol,
-				    struct snd_ctl_elem_value *ucontrol)
+static unsigned int *tegra_admaif_route_val(struct snd_kcontrol *kcontrol)
 {
 	struct snd_soc_component *cmpnt = snd_soc_kcontrol_component(kcontrol);
 	struct soc_enum *ec = (struct soc_enum *)kcontrol->private_value;
 	struct tegra_admaif *admaif = snd_soc_component_get_drvdata(cmpnt);
-	long *uctl_val = &ucontrol->value.integer.value[0];
 
 	if (strstr(kcontrol->id.name, "Playback Mono To Stereo"))
-		*uctl_val = admaif->mono_to_stereo[ADMAIF_TX_PATH][ec->reg];
+		return &admaif->mono_to_stereo[ADMAIF_TX_PATH][ec->reg];
 	else if (strstr(kcontrol->id.name, "Capture Mono To Stereo"))
-		*uctl_val = admaif->mono_to_stereo[ADMAIF_RX_PATH][ec->reg];
+		return &admaif->mono_to_stereo[ADMAIF_RX_PATH][ec->reg];
 	else if (strstr(kcontrol->id.name, "Playback Stereo To Mono"))
-		*uctl_val = admaif->stereo_to_mono[ADMAIF_TX_PATH][ec->reg];
+		return &admaif->stereo_to_mono[ADMAIF_TX_PATH][ec->reg];
 	else if (strstr(kcontrol->id.name, "Capture Stereo To Mono"))
-		*uctl_val = admaif->stereo_to_mono[ADMAIF_RX_PATH][ec->reg];
+		return &admaif->stereo_to_mono[ADMAIF_RX_PATH][ec->reg];
+	return NULL;
+}
 
+static int tegra_admaif_get_control(struct snd_kcontrol *kcontrol,
+				    struct snd_ctl_elem_value *ucontrol)
+{
+	unsigned int *valp = tegra_admaif_route_val(admaif, kcontrol);
+
+	if (!valp)
+		return -EINVAL;
+	ucontrol->value.integer.value[0] = *valp;
 	return 0;
 }
 
 static int tegra_admaif_put_control(struct snd_kcontrol *kcontrol,
 				    struct snd_ctl_elem_value *ucontrol)
 {
-	struct snd_soc_component *cmpnt = snd_soc_kcontrol_component(kcontrol);
-	struct soc_enum *ec = (struct soc_enum *)kcontrol->private_value;
-	struct tegra_admaif *admaif = snd_soc_component_get_drvdata(cmpnt);
+	unsigned int *valp = tegra_admaif_route_val(admaif, kcontrol);
 	int value = ucontrol->value.integer.value[0];
 
-	if (strstr(kcontrol->id.name, "Playback Mono To Stereo"))
-		admaif->mono_to_stereo[ADMAIF_TX_PATH][ec->reg] = value;
-	else if (strstr(kcontrol->id.name, "Capture Mono To Stereo"))
-		admaif->mono_to_stereo[ADMAIF_RX_PATH][ec->reg] = value;
-	else if (strstr(kcontrol->id.name, "Playback Stereo To Mono"))
-		admaif->stereo_to_mono[ADMAIF_TX_PATH][ec->reg] = value;
-	else if (strstr(kcontrol->id.name, "Capture Stereo To Mono"))
-		admaif->stereo_to_mono[ADMAIF_RX_PATH][ec->reg] = value;
-
-	return 0;
+	if (!valp)
+		return -EINVAL;
+	if (value == *valp)
+		return 0;
+	*valp = value;
+	return 1;
 }
 
 static int tegra_admaif_dai_probe(struct snd_soc_dai *dai)
